{"version":3,"file":"Filters-atoms-ToggleButton-stories.f0dea2ce.iframe.bundle.js","mappings":";;;AAwBA;AAWA;AAIA;AAQA","sources":["webpack://scorer-ui-kit-storybook/./src/stories/Filters/atoms/ToggleButton.stories.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { ToggleButton } from \"scorer-ui-kit\";\nimport { boolean, object, select, text } from \"@storybook/addon-knobs\";\nimport { action } from \"@storybook/addon-actions\";\nimport styled from \"styled-components\";\n\nconst ToggleButtonStory = {\n  title: 'Filters/atoms',\n  component: ToggleButton,\n  decorators: []\n};\n\nconst layoutOptions = [\n  { text: 'Grid', value: 'grid', icon: 'LayoutGrid' },\n  { text: 'List', value: 'list', icon: 'LayoutList' }\n]\n\nconst CameraData = styled.div``;\nconst Camera = styled.li``;\n\nconst Container = styled.div``;\nconst DataGroup = styled.ol<{ layout: string }>`\n  margin-top: 20px;\n  display: grid;\n  ${({ layout }) => layout === 'grid' &&\n    `\n      list-style-type: none;\n      grid-template-columns: repeat(3, 300px);\n      gap: 16px;\n        ${Camera} {\n          padding: 100px 20px;\n          border: 1px solid var(--grey-9);\n          text-align: center;\n        }\n    `\n  };\n`;\n\nconst StatusSpan = styled.span<{ isOnline?: boolean }>`\n    ${({ isOnline }) => isOnline ?\n    `\n      color: var(--success);\n    `\n    :\n    `\n      color: var(--warning);\n    `}\n  `;\n\nexport const _ToggleButton = () => {\n  const [selectedLayout, setSelectedLayout] = useState(0)\n\n  const disabled = boolean('Disabled', false);\n  const design = select('Design type', { Default: 'default', Basic: 'basic' }, 'basic');\n  const categoryLabel = text('Category Label', 'Layout');\n  const options = object('Options', layoutOptions);\n  const showToggleValue = action('Button Value: ');\n\n  const onToggle = useCallback((index: number, value: string | number) => {\n    setSelectedLayout(index);\n    showToggleValue(value);\n  }, [showToggleValue])\n\n  return (\n    <Container>\n      <ToggleButton\n        {...{\n          categoryLabel,\n          options,\n          onToggle,\n          disabled,\n          design,\n          selectedIndex: selectedLayout\n        }} />\n\n      <DataGroup layout={layoutOptions[selectedLayout].value}>\n        <Camera>\n          <CameraData>\n            Camera01 - <StatusSpan isOnline>Online</StatusSpan>\n          </CameraData>\n        </Camera>\n        <Camera>\n          <CameraData>\n            Camera02 - <StatusSpan isOnline>Online</StatusSpan>\n          </CameraData>\n        </Camera>\n        <Camera>\n          <CameraData>\n            Camera03 - <StatusSpan>OffLine</StatusSpan>\n          </CameraData>\n        </Camera>\n        <Camera>\n          <CameraData>\n            Camera04 - <StatusSpan>OffLine</StatusSpan>\n          </CameraData>\n        </Camera>\n        <Camera>\n          <CameraData>\n            Camera05 - <StatusSpan>OffLine</StatusSpan>\n          </CameraData>\n        </Camera>\n        <Camera>\n          <CameraData>\n            Camera06 - <StatusSpan>OffLine</StatusSpan>\n          </CameraData>\n        </Camera>\n        <Camera>\n          <CameraData>\n            Camera07 - <StatusSpan isOnline>Online</StatusSpan>\n          </CameraData>\n        </Camera>\n        <Camera>\n          <CameraData>\n            Camera08 - <StatusSpan isOnline>Online</StatusSpan>\n          </CameraData>\n        </Camera>\n        <Camera>\n          <CameraData>\n            Camera09 - <StatusSpan>Online</StatusSpan>\n          </CameraData>\n        </Camera>\n      </DataGroup>\n    </Container>\n  )\n}\n\nexport default ToggleButtonStory;"],"names":[],"sourceRoot":""}