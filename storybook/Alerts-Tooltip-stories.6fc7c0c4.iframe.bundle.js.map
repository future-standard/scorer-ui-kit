{"version":3,"file":"Alerts-Tooltip-stories.6fc7c0c4.iframe.bundle.js","mappings":";;AAgBA;;;;;;AAQA","sources":["webpack://scorer-ui-kit-storybook/./src/stories/Alerts/Tooltip.stories.tsx"],"sourcesContent":["import { boolean, select, text } from \"@storybook/addon-knobs\";\nimport React, { useRef } from \"react\";\nimport { PageTitle, Tooltip } from \"scorer-ui-kit\";\nimport { generateIconList } from \"../helpers\";\nimport styled from \"styled-components\";\n\nexport default {\n  title: 'Alerts/atoms',\n  component: Tooltip,\n  decorators: []\n};\n\nconst Container = styled.div``;\n\nconst Content = styled.div`\n  margin: 20px 0;\n`;\n\nconst HoverSpan = styled.span`\n  color: var(--primary-11);\n  display: inline-block;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const _Tooltip = () => {\n\n  const message = text(\"Message\", \"This is the tooltip of the hovering element\");\n  const type = select(\"Type\", { Warning: 'warning', Info: 'info', Success: 'success', Neutral: 'neutral' }, 'info');\n  const noIcon = boolean('No Icon', false);\n  const iconList = { '': '', ...generateIconList() };\n  const icon = select(\"Icon\", iconList, 'Information');\n  const tooltipPosition = select(\"Tooltip Position\", { TopLeft: 'top-left', Top: 'top', TopRight: 'top-right', BottomLeft: 'bottom-left', Bottom: 'bottom', BottomRight: 'bottom-right', LeftTop: 'left-top', Left: 'left', LeftBottom: 'left-bottom', RightTop: 'right-top', Right: 'right', RightBottom: 'right-bottom' }, 'top-right')\n\n  const exampleTriggerA = useRef<HTMLSpanElement>(null);\n  const exampleTriggerB = useRef<HTMLSpanElement>(null);\n  const exampleTriggerC = useRef<HTMLSpanElement>(null);\n  const exampleTriggerD = useRef<HTMLSpanElement>(null);\n  const exampleTriggerE = useRef<HTMLSpanElement>(null);\n\n\n  return (\n    <Container>\n      <PageTitle\n        title=\"Page with tooltips\"\n      />\n      <Content>\n        The tooltip is a common graphical user interface (GUI) element in which, when <HoverSpan ref={exampleTriggerA}>hovering over</HoverSpan> a screen element or component, a text box displays information about that element, such as a description of a button's function, what an abbreviation stands for, or the exact absolute time stamp over a relative time (\"… ago\"). In this paragraph the tooltip will be display in a dynamic position.\n      </Content>\n      <Content>\n        The tooltip is a common graphical user interface (GUI) element in which, when <HoverSpan ref={exampleTriggerB}>hovering over</HoverSpan> a screen element or component, a text box displays information about that element, such as a description of a button's function, what an abbreviation stands for, or the exact absolute time stamp over a relative time (\"… ago\"). In this paragraph the tooltip will be display in a dynamic position.\n      </Content>\n      <Content>\n        The tooltip is a common graphical user interface (GUI) element in which, when <HoverSpan ref={exampleTriggerC}>hovering over</HoverSpan> a screen element or component, a text box displays information about that element, such as a description of a button's function, what an abbreviation stands for, or the exact absolute time stamp over a relative time (\"… ago\"). In this paragraph the tooltip will be display in a dynamic position.\n      </Content>\n      <Content>\n        The tooltip is a common graphical user interface (GUI) element in which, when <HoverSpan ref={exampleTriggerD}>hovering over</HoverSpan> a screen element or component, a text box displays information about that element, such as a description of a button's function, what an abbreviation stands for, or the exact absolute time stamp over a relative time (\"… ago\"). In this paragraph the tooltip will be display in a dynamic position.\n      </Content>\n      <Content>\n        This tooltip <HoverSpan ref={exampleTriggerE}>message</HoverSpan> position is fixed,  you can update it with the property tool position with the knobs bellow .\n      </Content>\n      <Tooltip tooltipFor={exampleTriggerA} icon={noIcon ? undefined : icon} {...{ message }} />\n      <Tooltip tooltipFor={exampleTriggerB} icon={noIcon ? undefined : icon} {...{ message }} />\n      <Tooltip tooltipFor={exampleTriggerC} icon={noIcon ? undefined : icon} {...{ message }} />\n      <Tooltip tooltipFor={exampleTriggerD} icon={noIcon ? undefined : icon} {...{ message }} />\n      <Tooltip tooltipFor={exampleTriggerE} maxWidth='200px' icon={noIcon ? undefined : icon} {...{ type, message, tooltipPosition }} />\n    </Container>\n  )\n}"],"names":[],"sourceRoot":""}