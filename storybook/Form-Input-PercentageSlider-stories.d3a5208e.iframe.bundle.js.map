{"version":3,"file":"Form-Input-PercentageSlider-stories.d3a5208e.iframe.bundle.js","mappings":";;;AAiBA","sources":["webpack://scorer-ui-kit-storybook/./src/stories/Form/Input/PercentageSlider.stories.tsx"],"sourcesContent":["import React from 'react';\n// import { action } from '@storybook/addon-actions';\nimport { boolean, number, object, text} from \"@storybook/addon-knobs\";\nimport { action } from '@storybook/addon-actions';\nimport styled from 'styled-components';\nimport {PercentageSlider, ISliderMark, IFeedbackColor} from 'scorer-ui-kit';\n\n\nexport default {\n  title: 'Form/Input',\n  component: PercentageSlider,\n  decorators: []\n};\n\nconst Container = styled.div`\n    margin: 20px;\n    width: 268px;\n`;\n\nconst exampleMarks : ISliderMark[] = [\n  {\n    value: 0,\n    label: '0%',\n  },\n  {\n    value: 20,\n  },\n  {\n    value: 40,\n  },\n  {\n    value: 60,\n  },\n  {\n    value: 80,\n  },\n  {\n    value: 100,\n    label:'100%',\n  },\n];\n\nexport const _PercentageSlider = () => {\n  const title = text('Title', 'Duration');\n  const disabled = boolean('Disabled', false);\n  const defaultValue = number('Default value', 30);\n  const customThumb = boolean(\"Custom colors function\",false);\n  const customTitle = boolean(\"Custom Title function\",false);\n  const showValue = action('Input Callback');\n  const marks = object('Marks', exampleMarks);\n  const showTitle = boolean(\"Show Value\", true);\n  const allMarkCentered = boolean('Center all mark values', false);\n\n  // const step = number('Step', 1); // still fixing step option\n  const handleUpdate = (value: number) => {\n    console.log('updated value', value);\n    showValue(`Returned value: ${value}`, value)\n  };\n\n  const otherColorHandler = (value: number)  : IFeedbackColor =>{\n    if(value <= 20) {\n      return 'neutral';\n    }\n\n    if((value > 20) && (value <= 80)) {\n      return 'info';\n    }\n\n    return 'error';\n  }\n\n  const otherTitlesHandler = (value: number) : string => {\n    if(value <= 20) {\n      return 'Small sound';\n    }\n\n    if((value > 20) && (value <= 80)) {\n      return 'Normal sound';\n    }\n\n    return 'Dangerous sound';\n  }\n\n  return (\n    <Container>\n      <PercentageSlider\n          disabled={disabled}\n          // step={step}\n          inputCallback={handleUpdate}\n          marks={marks}\n          defaultValue={defaultValue}\n          title={title}\n          updateThumbColor={customThumb ? otherColorHandler : undefined }\n          updateTitle={customTitle ? otherTitlesHandler : undefined}\n          showValue={showTitle}\n          allMarkCentered={allMarkCentered}\n        />\n    </Container>\n  )\n}"],"names":[],"sourceRoot":""}