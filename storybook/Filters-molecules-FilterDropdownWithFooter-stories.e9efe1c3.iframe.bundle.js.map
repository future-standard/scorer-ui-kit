{"version":3,"file":"Filters-molecules-FilterDropdownWithFooter-stories.e9efe1c3.iframe.bundle.js","mappings":";;;AAuBA;;;;AASA","sources":["webpack://scorer-ui-kit-storybook/./src/stories/Filters/molecules/FilterDropdownWithFooter.stories.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { boolean, select } from \"@storybook/addon-knobs\";\nimport { action } from '@storybook/addon-actions';\nimport {\n  FilterDropdown,\n  IFilterValue,\n  PageHeader,\n} from 'scorer-ui-kit';\nimport { generateIconList } from '../../helpers';\nimport { searchTemplateResultEnglish, searchTemplateResultJapanese } from '../../helpers/data_samples';\n\nconst FilterDropdownWithFooterStory = {\n  title: 'Filters/molecules/FilterDropdown',\n  component: FilterDropdown,\n  parameters: {\n    componentSubtitle: 'FilterDropdown component with footer controls',\n  }\n};\n\nconst Wrapper = styled.div`\n  margin: 100px;\n  display: inline-block;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\n// Sample data for the dropdown\nconst foodItemsEng = [\n  { text: 'Ramen', value: 0 },\n  { text: 'Takoyaki', value: 1 },\n  { text: 'Gyoza', value: 2 },\n  { text: 'Tempura', value: 3 },\n  { text: 'Sushi', value: 4 },\n  { text: 'Natto', value: 5 },\n  { text: 'Sashimi', value: 6 },\n];\n\nconst foodItemsJap = [\n  { text: 'ラーメン', value: 0 },\n  { text: '蛸焼き', value: 1 },\n  { text: '餃子', value: 2 },\n  { text: '天婦羅', value: 3 },\n  { text: 'すし', value: 4 },\n  { text: '納豆', value: 5 },\n  { text: 'お造り', value: 6 },\n];\n\nexport const DropdownWithApplyAndReset = () => {\n  const language = select(\"Language\", { English: 'english', Japanese: \"japanese\" }, \"japanese\");\n  const iconList = generateIconList();\n  const buttonIcon = select(\"Icon\", iconList, Object.keys(iconList)[0]);\n  const disabled = boolean('Disabled', false);\n  const hasOptionsFilter = boolean('Has Options Filter', true);\n\n  // State for selected items\n  const [selected, setSelected] = useState<IFilterValue>(null);\n\n  // Action trackers\n  const resetAction = action('Reset clicked');\n  const cancelAction = action('Cancel/Close clicked');\n  const selectAction = action('Item selected');\n  const hasApply = boolean('Has Apply', true);\n  const hasReset = boolean('Has Reset', true);\n\n  // Handlers for the dropdown\n  const handleSelect = useCallback((newSelection: IFilterValue) => {\n    selectAction(newSelection);\n    setSelected(newSelection);\n  }, [selectAction]);\n\n  const handleReset = useCallback(() => {\n    resetAction();\n  }, [resetAction]);\n\n  const handleCancel = useCallback(() => {\n    cancelAction();\n  }, [cancelAction]);\n\n  return (\n    <Container>\n      <Wrapper>\n        <PageHeader\n          title=\"FilterDropdown with Footer Controls\"\n          introductionText=\"This example demonstrates the FilterDropdown component with both Reset and Apply buttons.\"\n        />\n\n        <FilterDropdown\n          buttonIcon={buttonIcon}\n          buttonText={language === 'japanese' ? 'メニュー' : 'Menu' }\n          list={language === 'japanese' ? foodItemsJap : foodItemsEng}\n          selected={selected}\n          disabled={disabled}\n          hasOptionsFilter={hasOptionsFilter}\n          searchPlaceholder={language === 'japanese' ?  'メニュー...' : 'Menu options...' }\n          searchResultText={language === 'japanese' ? searchTemplateResultJapanese : searchTemplateResultEnglish}\n          optionType=\"checkbox\"\n          onSelect={handleSelect}\n          onResetCallback={handleReset}\n          onCancelCallback={handleCancel}\n          hasReset={hasReset}\n          hasApply={hasApply}\n          resetText={ language === 'japanese' ? 'リセット' : 'Reset'}\n          cancelText={ language === 'japanese' ? 'キャンセル' : 'Cancel'}\n          closeText={ language === 'japanese' ? '閉じる' : 'Close' }\n          applyText={ language === 'japanese' ? '適用' : 'Apply' }\n          descendingText = { language === 'japanese' ? '降順' : 'Descending'}\n          ascendingText={ language === 'japanese' ? '昇順' : 'Ascending'}\n        />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default FilterDropdownWithFooterStory;"],"names":[],"sourceRoot":""}