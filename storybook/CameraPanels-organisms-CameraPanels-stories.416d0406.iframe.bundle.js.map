{"version":3,"file":"CameraPanels-organisms-CameraPanels-stories.416d0406.iframe.bundle.js","mappings":";;;AAiBA;AACA;;;AAGA;AACA;;AAIA;;;;AAMA","sources":["webpack://scorer-ui-kit-storybook/./src/stories/CameraPanels/organisms/CameraPanels.stories.tsx"],"sourcesContent":["import React, { ReactElement, useMemo } from 'react';\nimport styled, {css} from 'styled-components';\nimport { CameraPanels, ICameraPanel, CameraPanelWrapper, TagList } from 'scorer-ui-kit';\nimport { boolean, select, text } from '@storybook/addon-knobs';\nimport { generateIconList } from '../../helpers';\nimport Photo from '../../assets/placeholder.jpg';\nimport { action } from '@storybook/addon-actions';\n\nconst CameraPanelsStory = {\n  title: 'CameraPanels/organisms',\n  component: CameraPanels,\n  decorators: []\n};\n\nconst Container = styled.div<{ showCustomComponent?: boolean }>`\n  max-width: 1200px;\n\n  ${({showCustomComponent}) =>  showCustomComponent && css`\n    ${CameraPanelWrapper} {\n      height: 250px;\n    }\n  `};\n`;\n\nconst TagListWrapper = styled.div`\n  padding: 10px;\n`;\n\nconst Title = styled.div`\n  color: var(--grey-10);\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nconst customBottom: ReactElement =\n  <TagListWrapper>\n    <Title>Custom Component Example</Title>\n    <TagList\n      tagsConfig={[\n        {\n          icon: 'MetaCategories',\n          label: 'Shop A',\n          weight: 'light',\n          size: 12\n        },\n        {\n          icon: 'MetaTags',\n          label: 'Example',\n          weight: 'light',\n          size: 12\n        },\n        {\n          icon: 'MetaTags',\n          label: 'Smart',\n          weight: 'light',\n          size: 12\n        }\n      ]}\n    />\n  </TagListWrapper>\n\n\nexport const _CameraPanels = () => {\n  const iconList = {'': '', ...generateIconList()};\n  const showCustomComponent = boolean('Show Custom Component Example', false)\n  const status = select('Type', { Error: 'error', Warning: 'warning', Info: 'info', Success: 'success', Neutral: 'neutral' }, 'neutral');\n  const noticeIcon = select('Status Icon', iconList, 'Information');\n  const hasNotice = boolean('Has Notice', false);\n  const noticeMessage = text('Notice Message', 'Please wait while the first stream is processed.');\n  const noticeTitle = text('Notice Title', 'Initial Stream Pending');\n  const isEmptyWithIcon = boolean('Has Empty Stream with Icon', false);\n  const emptyIcon = select('Empty stream icon', iconList, '')\n\n\n  const deviceIcon = select('Device Icon', iconList, 'Camera');\n  const hideIcon = boolean('Hide Panel Data Icon', false);\n  const leftTitle = text('Left Title', `Location - Zone`)\n  const leftSubTitle = text('Left SubTitle', 'Camera Name');\n  const rightTitle = text('Right Title', 'Analysis');\n  const rightSubTitle = text('Right Subtitle', 'PeopleCount');\n  const reRouting = action('Changing to camera page');\n\n\n  const ImagePanel: ICameraPanel = useMemo(() => ({\n    streamProps: {\n      src: Photo,\n      mediaType: 'img',\n      isEmptyWithIcon,\n      noticeTitle,\n      noticeMessage,\n      status,\n      noticeIcon,\n      hasNotice,\n      emptyIcon\n    },\n    panelMetaData: {\n      deviceIcon,\n      leftSubTitle,\n      leftTitle,\n      rightTitle,\n      rightSubTitle,\n      hideIcon,\n    },\n    customBottom: showCustomComponent ? customBottom : undefined,\n\n    panelOnClick: () => { reRouting() },\n  }), [isEmptyWithIcon, noticeTitle, noticeMessage, status, noticeIcon, hasNotice, emptyIcon, deviceIcon, leftSubTitle, leftTitle, rightTitle, rightSubTitle, hideIcon, showCustomComponent, reRouting])\n\n  const VideoPanel: ICameraPanel = useMemo(() => ({\n    streamProps: {\n      src: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',\n      mediaType: 'video',\n      videoOptions: { autoPlay: false, controls: true },\n      isEmptyWithIcon,\n      noticeTitle,\n      noticeMessage,\n      status,\n      noticeIcon,\n      hasNotice,\n      emptyIcon\n    },\n    panelMetaData: {\n      deviceIcon,\n      leftSubTitle,\n      leftTitle,\n      rightTitle,\n      rightSubTitle,\n      hideIcon\n    },\n    customBottom: showCustomComponent ? customBottom : undefined,\n  }), [isEmptyWithIcon, noticeTitle, noticeMessage, status, noticeIcon, hasNotice, emptyIcon, deviceIcon, leftSubTitle, leftTitle, rightTitle, rightSubTitle, hideIcon, showCustomComponent])\n\n\n  const panelConfig: ICameraPanel[] = useMemo(() => [\n    ImagePanel, VideoPanel, ImagePanel, VideoPanel, ImagePanel, VideoPanel, ImagePanel, VideoPanel, ImagePanel, VideoPanel, ImagePanel\n  ], [ImagePanel, VideoPanel]);\n\n  return (\n    <Container {...{showCustomComponent}}>\n      <CameraPanels\n        panels={panelConfig}\n      />\n    </Container>\n  )\n}\n\nexport default CameraPanelsStory;\n"],"names":[],"sourceRoot":""}