{"version":3,"file":"Tables-atoms-EditableCell-stories.da985839.iframe.bundle.js","mappings":";AAaA;AACA;;;;;;;;;AASA","sources":["webpack://scorer-ui-kit-storybook/./src/stories/Tables/atoms/EditableCell.stories.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { text, select } from \"@storybook/addon-knobs\";\nimport {EditCell} from 'scorer-ui-kit';\nimport {sleep} from '../../helpers';\n\nconst EditableCellStory = {\n  title: 'Tables/atoms',\n  component: EditCell,\n  decorators: []\n};\n\nconst Container = styled.div`\n  font-family: ${p => p.theme.fontFamily.data};\n  ${p => p.theme.typography.table.columnData['normalImportance']};\n  margin: 100px;\n  display: table-cell;\n  height: 50px;\n  width: 150px;\n  vertical-align: middle;\n  position: relative;\n  line-height: 30px;\n  padding: 0 2px;\n`;\n\nconst defaultVal = {id:'id-1', cameraName:'Camera1'}\n\nexport const _EditCell = () => {\n  const [cameraData, setCameraData] = useState(defaultVal);\n  const alignment = select('Alignment', { Left: \"left\", Center: \"center\", Right: \"right\" }, \"left\");\n  const toValue = text('ToLink', '/');\n\n\n  const updateCameraName = async (value: string, rowKey:string) => {\n    // vefiry the row you want to update\n    if(rowKey === 'id-1') {\n      const updatedCell = {...cameraData};\n      updatedCell.cameraName = value;\n    // Database wait example\n      await sleep(2000);\n      setCameraData(updatedCell);\n    }\n  }\n\n\n  return <Container>\n    <EditCell\n      defaultValue={cameraData.cameraName}\n      rowKey={cameraData.id}\n      saveCallback={updateCameraName}\n      alignment={alignment}\n      toLink={toValue}\n      />\n  </Container>\n};\n\nexport default EditableCellStory;"],"names":[],"sourceRoot":""}