{"version":3,"file":"Form-SelectField-stories.1ed5ae65.iframe.bundle.js","mappings":";;;;;AAkBA;AAGA;AACA;;AAEA;;AAIA;;;;;AAOA","sources":["webpack://scorer-ui-kit-storybook/./src/stories/Form/SelectField.stories.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { text, select, object, boolean } from \"@storybook/addon-knobs\";\nimport { action } from '@storybook/addon-actions';\nimport { SelectField, SelectWrapper} from 'scorer-ui-kit';\nimport { generateIconList } from '../helpers';\n\nexport default {\n  title: 'Form/atoms',\n  component: SelectField,\n  decorators: []\n};\n\nconst Container = styled.div`\n  margin: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst FixedSelect = styled.div<{ width?: string }>`\n  ${SelectWrapper} {\n    width: ${({ width }) => width ? width : `60px`};\n  }\n`;\n\nconst Subsection = styled.div`\n  flex: 1;\n`;\n\nconst Title = styled.h1`\n  font-family: var(--font-title);\n  font-size: 24px;\n  color: var(--grey-12);\n  font-weight: 500;\n`;\n\nexport const _SelectField = () => {\n  const iconList = generateIconList();\n  \n  const isCompact = boolean('isCompact', false);\n  const disabled = boolean('Disabled', false);\n  const fieldState = select(\"State\", { Default: \"default\",  Disabled: 'disabled', Required: 'required',  Valid: 'valid',  Invalid: 'invalid', Processing: 'processing' }, \"default\");\n  const placeholder = text('Placeholder (Free Width)', 'Choose an option...');\n  const defaultValue = text('Default Value (Free Width)', '');\n  const freeSelectValue = action('Free select value');\n  const fixedSelectValue = action('Free select value');\n  const icon = select(\"Icon\", iconList, Object.keys(iconList)[0]);\n\n  const selectWidth = text('Fix width', '80px');\n  const label = object('Free Select Label', {\n    htmlFor: 'free_select',\n    text: 'Field Label'\n  })\n\n  const fixLabel = object('Fix Select Label', {\n    htmlFor: 'fix_select',\n    text: 'Page',\n    isSameRow: true\n  })\n\n  const freeOnChange = (value: string) => {\n    freeSelectValue(value);\n  }\n\n  const fixSelectOnChange = (value: string) => {\n    fixedSelectValue(value);\n  }\n  \n  return (\n    <Container>\n      <Subsection>\n        <Title>Select (Free Width)</Title>\n        <SelectField\n          {...{\n            isCompact,\n            placeholder,\n            label,\n            selectWidth,\n            disabled,\n            defaultValue,\n            fieldState\n          }}\n          changeCallback={freeOnChange}\n        >\n          <option value=\"option1\">Example Option 1</option>\n          <option value=\"option2\">Example Option 2</option>\n          <option value=\"option3\">Example Option 3</option>\n          <option value=\"option4\">Example Option 4</option>\n        </SelectField>\n      </Subsection>\n          \n      <Subsection>\n        <Title>Select (Fixed Width)</Title>\n        <FixedSelect width={selectWidth}>\n          <SelectField\n            {...{ isCompact, disabled, fieldState }}\n            label={fixLabel}\n            defaultValue={1}\n            changeCallback={fixSelectOnChange}\n            >\n            <option value={1}>1</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={15}>15</option>\n            <option value={20}>20</option>\n          </SelectField>\n        </FixedSelect>\n      </Subsection>\n        \n      <Subsection>\n        <Title>Select (With Icon)</Title>\n        <SelectField\n          {...{\n            isCompact,\n            placeholder,\n            label,\n            selectWidth,\n            disabled,\n            defaultValue,\n            fieldState,\n            icon\n          }}\n          changeCallback={freeOnChange}\n          >\n          <option value=\"option1\">Example Option 1</option>\n          <option value=\"option2\">Example Option 2</option>\n          <option value=\"option3\">Example Option 3</option>\n          <option value=\"option4\">Example Option 4</option>\n        </SelectField>\n      </Subsection>\n    </Container>\n  );\n}"],"names":[],"sourceRoot":""}