{"version":3,"file":"Form-Input-DurationSlider-stories.a10ec0dd.iframe.bundle.js","mappings":";;AAgBA;;;AAKA","sources":["webpack://scorer-ui-kit-storybook/./src/stories/Form/Input/DurationSlider.stories.tsx"],"sourcesContent":["import React, { useState } from 'react';\n// import { action } from '@storybook/addon-actions';\nimport { boolean, number, object, text, select } from \"@storybook/addon-knobs\";\nimport { action } from '@storybook/addon-actions';\nimport styled from 'styled-components';\nimport { DurationSlider, ISliderMark, PageHeader, ITimeUnit } from 'scorer-ui-kit';\n\n\nexport default {\n  title: 'Form/Input',\n  component: DurationSlider,\n  decorators: []\n};\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst Wrapper = styled.div`\n  margin: 20px;\n  width: 280px;\n`;\n\nconst exampleMarks: ISliderMark[] = [\n  {\n    value: 1,\n    label: '1H',\n  },\n  {\n    value: 2,\n    label: '2H',\n  },\n  {\n    value: 3,\n    label: '3H',\n  },\n  {\n    value: 4,\n    label: '4H',\n  },\n  {\n    value: 5,\n    label: '5H',\n  },\n  {\n    value: 6,\n    label: '6H',\n  },\n  {\n    value: 7,\n    label: '7H',\n  },\n  {\n    value: 8,\n    label: '8H',\n  },\n];\n\nconst exampleMarks2: ISliderMark[] = [\n  {\n    value: 3,\n    label: '3s',\n  },\n  {\n    value: 360,\n    label: '',\n  },\n  {\n    value: 720,\n    label: '',\n  },\n  {\n    value: 1080,\n    label: '',\n  },\n  {\n    value: 1440,\n    label: '',\n  },\n  {\n    value: 1800,\n    label: '',\n  },\n  {\n    value: 2160,\n    label: '',\n  },\n  {\n    value: 2520,\n    label: '',\n  },\n  {\n    value: 2880,\n    label: '',\n  },\n  {\n    value: 3240,\n    label: '',\n  },\n  {\n    value: 3600,\n    label: '1h',\n  },\n];\nconst defaultMixValue = 1800;\n\ninterface ITimeValue {\n  time: number\n  unit: ITimeUnit\n}\n\nconst secToMinAndHours = (seconds: number): ITimeValue => {\n\n  if (seconds >= 3600) {\n    return {\n      time: Math.round(seconds / 3600),\n      unit: 'hours'\n    }\n  }\n\n  if (seconds >= 60) {\n    return {\n      time: Math.round(seconds / 60),\n      unit: 'minutes'\n    }\n  }\n\n  return {\n    time: seconds,\n    unit: 'seconds'\n  }\n}\n\nexport const _DurationSlider = () => {\n\n  const title = text('Title', 'Duration');\n  const durationUnit = select(\"Time Unit\", { Seconds: 'seconds', Minutes: 'minutes', Hours: 'hours' }, 'hours');\n  const disabled = boolean('Disabled', false);\n  const maxValue = number('Max', 8);\n  const minValue = number('Min', 1);\n  const defaultValue = number('Default value', 6)\n\n  const showValue = action('Input Callback');\n  const marks = object('Marks', exampleMarks);\n  // const step = number('Step', 1); // still fixing step option\n  const handleUpdate = (value: number) => {\n    console.log('updated value', value);\n    showValue(`Returned value: ${value}`, value)\n  };\n\n  const [value2, setValue2] = useState<ITimeValue>({time: 30, unit: 'minutes'});\n\n  const title2 = text('Title 2', 'Time');\n  const disabled2 = boolean('Disabled 2', false);\n  const maxValue2 = number('Max 2', 3600);\n  const minValue2 = number('Min 2', 3);\n  const defaultValue2 = number('Default value 2', defaultMixValue)\n  const onlyMarkSelect = boolean('Only Mark Select', true);\n\n  const showValue2 = action('Input Callback');\n  const marks2 = object('Marks 2', exampleMarks2);\n  // const step = number('Step', 1); // still fixing step option\n  const handleUpdate2 = (value: number) => {\n    console.log('updated value2', value);\n    showValue2(`Returned value2: ${value}`, value)\n    const newValue = secToMinAndHours(value)\n    setValue2(newValue);\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <PageHeader\n          title='Simple example'\n          introductionText='Values are controlled by component'\n        />\n        <DurationSlider\n          max={maxValue}\n          min={minValue}\n          disabled={disabled}\n          // step={step}\n          inputCallback={handleUpdate}\n          marks={marks}\n          defaultValue={defaultValue}\n          title={title}\n          timeUnit={durationUnit}\n        />\n      </Wrapper>\n      <Wrapper>\n        <PageHeader\n          title='Mixed values example'\n          introductionText='Values are controlled from outside'\n        />\n        <DurationSlider\n          max={maxValue2}\n          min={minValue2}\n          disabled={disabled2}\n          // step={step}\n          inputCallback={handleUpdate2}\n          marks={marks2}\n          defaultValue={defaultValue2}\n          controlledValue={value2.time}\n          title={title2}\n          timeUnit={value2.unit}\n          onlyMarkSelect={onlyMarkSelect}\n        />\n      </Wrapper>\n    </Container>\n  )\n}"],"names":[],"sourceRoot":""}